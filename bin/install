#!/bin/bash

set -e
# TODO: do something about the $1 vs $@ in the install_or_upgrade functions
# TODO: make install_or_upgrade echo better statements

fancy_echo() {
  local fmt="$1"; shift

  printf "\n$fmt\n" "$@"
}

has_brew() {
  if [ ! -f "$(which brew)" ]; then
    echo 'Please install brew.'
    echo '  See http://brew.sh'
    echo ''
    echo '  To install:'
    echo '  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'
    exit 1
  fi
  return 0
}

has_stow() {
  if [ ! -f "$(which stow)" ]; then
    echo 'Please install stow.'
    echo '  See http://www.gnu.org/software/stow/'
    echo ''
    echo '  To install:'
    echo '  brew install stow'
    exit 1
  fi
  return 0
}

cask_install() {
  if cask_is_installed "$1"; then
    fancy_echo "Cask '$1' is already installed... no easy way to upgrade yet."
  else
    brew cask install "$1"
  fi
}

cask_is_installed() {
  local name="$(brew_cask_expand_alias "$1")"

  brew cask list -1 | grep -Fqx "$1"
}

brew_is_installed() {
  local name="$(brew_expand_alias "$1")"

  brew list -1 | grep -Fqx "$1"
}

brew_is_upgradable() {
  local name="$(brew_expand_alias "$1")"

  ! brew outdated --quiet "$1" >/dev/null
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_cask_expand_alias() {
  brew cask info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      fancy_echo "Upgrading %s ..." "$1"
      brew upgrade "$@"
    else
      fancy_echo "Already using the latest version of %s. Skipping ..." "$1"
    fi
  else
    fancy_echo "Installing %s ..." "$1"
    brew install "$@"
  fi
}

brew_tap() {
  brew tap "$1" 2> /dev/null
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    fancy_echo "Updating %s ..." "$1"
    gem update "$@"
  else
    fancy_echo "Installing %s ..." "$1"
    gem install "$@"
    rbenv rehash
  fi
}

install_or_update_bundler() {
  gem_install_or_update 'bundler'

  fancy_echo "Configuring Bundler ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))
}

stow_it() {
  stow --verbose files || echo 'Unable to stow.'
}

setup_vim() {
  [ ! -d $HOME/.vim/bundle/vundle ] && git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/vundle
  vim +PluginInstall +qall
}

has_brew
has_stow

# update brew itself
fancy_echo "updating brew...."
brew update

# install brews
brew_install_or_upgrade 'curl'
brew_install_or_upgrade 'git'
brew_install_or_upgrade 'htop-osx'
brew_install_or_upgrade 'vim'
brew_install_or_upgrade 'stow'
brew_install_or_upgrade 'tig'
brew_install_or_upgrade 'ack'
brew_install_or_upgrade 'tmux'
brew_install_or_upgrade 'redis'
brew_install_or_upgrade 'openssl'
brew_install_or_upgrade 'nginx'
brew_install_or_upgrade 'ssh-copy-id'
brew_install_or_upgrade 'colordiff'
brew_install_or_upgrade 'ag'
brew_install_or_upgrade 'postgres'

# fix pbcopy, pbpaste, launchtl in tmux
brew_install_or_upgrade 'reattach-to-user-namespace'

# install gems
gem_install_or_update 'tmuxinator'
gem_install_or_update 'interactive_editor'

cask_install 'google-chrome'
cask_install 'firefox'
cask_install 'iterm2'
cask_install 'spectacle'
cask_install 'dropbox'
cask_install 'ynab'
cask_install 'virtualbox'
cask_install 'vagrant'
cask_install '1password'
cask_install 'evernote'
cask_install 'slack'

# TODO: do I need these with my new setup?
brew_tap 'caskroom/fonts'
cask_install 'font-source-code-pro'
cask_install 'font-sauce-code-powerline'

# stow files
stow_it

# setup vim
setup_vim

fancy_echo 'Installation complete'
